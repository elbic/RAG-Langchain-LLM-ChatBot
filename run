#!/usr/bin/env bash

set -eo pipefail

DC="${DC:-exec}"

# If we're running in CI we need to disable TTY allocation for docker-compose
# commands that enable it by default, such as exec and run.
TTY=""
if [[ ! -t 1 ]]; then
  TTY="-T"
fi

# -----------------------------------------------------------------------------
# Helper functions start with _ and aren't listed in this script's help menu.
# -----------------------------------------------------------------------------

function _dc {
  docker-compose "${DC}" ${TTY} "${@}"
}

function _build_run_down {
  docker-compose build
  docker-compose run ${TTY} "${@}"
  docker-compose down
}

# -----------------------------------------------------------------------------

function cmd {
  # Run any command you want in the web container
  _dc web "${@}"
}
function lint {
  # Lint Python code
  cmd flake8 "${@}"
}
function format {
  # Format Python code
  cmd black . "${@}"
}

function psql {
  # Connect to PostgreSQL
  # shellcheck disable=SC1091
  . .env
 _dc postgres psql -U "${POSTGRES_USER}" "${@}"
}

function create_database {
  # Connect to PostgreSQL
  # shellcheck disable=SC1091
  # #docker exec -it rag_langchain_llm__chatbot-postgres-1 createdb -U yourusername yourdatabase
  . .env
 _dc postgres createdb -U "${POSTGRES_USER}" "${@}"
}

function ingest_data {
  # Connect to PostgreSQL
  # shellcheck disable=SC1091
  # docker exec -it rag_langchain_llm__chatbot-chatbot_api-1 python ./chatbot_api/ingest.py
  . .env
 _dc chatbot_api python ./chatbot_api/ingests/ingest.py "${@}"
}


function help {
  printf "%s <task> [args]\n\nTasks:\n" "${0}"

  compgen -A function | grep -v "^_" | cat -n

  printf "\nExtended help:\n  Each task has comments for general usage\n"
}

# This idea is heavily inspired by: https://github.com/adriancooney/Taskfile
TIMEFORMAT=$'\nTask completed in %3lR'
time "${@:-help}"
